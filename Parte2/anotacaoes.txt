git bisect start
git bisect bad HEAD
git bisect goog version

git bisect resert

git blame
// Responsavel pelo commit/alteração

Execute git checkout master para trabalhar na branch master;

Execute git pull origin master e git pull local master para garantir que você está com o código atualizado e sincronizado com os dois repositórios remotos;

Execute git checkout -b novo-release para passar a trabalhar em um nova branch, chamada novo-release;

Execute o comando git cherry-pick {hash} para trazer um commit para a branch master

git rebase novo-release

Execute o comando git bisect start para informar ao Git que você vai iniciar uma busca por determinada alteração;

Execute o comando git bisect bad HEAD para informar que o estado atual do código está "ruim", ou seja, o título não está no estado que você quer;

git log --oneline

Execute o comando git bisect good {hash}, substituindo {hash} pelo hash copiado, para informar que o estado atual do código está "bom"

git bisect good

Execute git bisect bad para informar ao Git que neste commit o código não está mais como você quer;

Execute git bisect reset para indicar que você finalizou a busca;

Para reverter esta alteração, execute git revert {hash};

Execute git blame index.html e confira o responsável por cada linha do arquivo


git cherry-pick pode trazer um commit específico para a branch atual

ncontrar o commit em que determinada alteração foi aplicada, utilizando o git bisect

encontrar o responsável por determinada linha ou bloco de código, utilizando o git blame

o comando git show {hash} mostra todas as alterações aplicadas pelo commit com o hash informado.



git log --graph




a estratégia de organização de branches, chamada Git Flow

Master, Develop, Branches de feature, Branches de Hotfix e Branches de release

https://git-cola.github.io/

https://www.gitkraken.com/


O Git Cola foi uma das primeiras ferramentas visuais multiplataforma. Embora não seja a mais complexa ou visualmente atraente, é bem completa e pode nos ajudar bastante;
O GitHub Desktop pode ser interessante para gerenciar os projetos do GitHub de forma mais ágil e facilitada, sem a necessidade de acessar o site;
O GitKraken é uma ferramenta extremamente completa, que nos auxilia inclusive com a implementação do Git Flow.

#!/bin/sh
git --git-dir={caminho_da_pasta_do_servidor} --work-tree={caminho_da_pasta_web} checkout -f